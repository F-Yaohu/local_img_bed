server:
  port: 8081 # 容器内使用8081端口，我们将在docker-compose中映射到主机端口

spring:
  datasource:
    # 从环境变量读取完整的数据库连接URL
    url: ${DB_URL}
    # 从环境变量读取数据库用户名和密码
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 200MB
  flyway:
    # 启动时自动检测表单是否存在并生成
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
  type-aliases-package: com.example.gallery.entity
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      id-type: auto

ok:
  http:
    connect-timeout: 60
    read-timeout: 60
    write-timeout: 60
    max-idle-connections: 200
    keep-alive-duration: 300

jwt:
  # 从环境变量读取JWT密钥和管理员凭证
  secret: "${JWT_SECRET}"
  expiration: 86400000

admin:
  username: "${ADMIN_USERNAME}"
  password: "${ADMIN_PASSWORD}"

image:
  storage:
    # 从环境变量读取容器内的图片存储路径
    root-path: ${IMAGE_STORAGE_ROOT_PATH:/data/images} # 默认为/data/images

logging:
  level:
    com.example.local_img_bed.mapper: debug
    root: info
